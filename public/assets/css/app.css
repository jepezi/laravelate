/*
|--------------------------------------------------------------------------
| Overwrite Bootstraps Variables
|--------------------------------------------------------------------------
|
|
|
*/
/**
 * #SETTINGS
 */
/*!
 * inuitcss, by @csswizardry
 *
 * github.com/inuitcss | inuitcss.com
 */
/**
 * #TOOLS
 */
/*------------------------------------*\
    #ALIASES
\*------------------------------------*/
/**
 * #GENERIC
 */
/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

/*------------------------------------*\
    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body, h1, h2, h3, h4, h5, h6, p, blockquote, pre, dl, dd, ol, ul, form, fieldset, legend, figure, table, th, td, caption, hr {
  margin: 0;
  padding: 0; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title], dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u, ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

/*------------------------------------*\
    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit; }

/*------------------------------------*\
    #SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6, ul, ol, dl, blockquote, p, address, table, fieldset, figure, pre {
  margin-bottom: 24px;
  margin-bottom: 1.5rem; }

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once,here.
 */
ul, ol, dd {
  margin-left: 48px;
  margin-left: 3rem; }

/**
 * #BASE
 */
/*------------------------------------*\
    #PAGE
\*------------------------------------*/
/**
 * High-, page-level styling.
 *
 * 1. Set the default `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Ensure the page always fills at least the entire height of the viewport.
 * 4. Prevent certain mobile browsers from automatically zooming fonts.
 * 5. Fonts on OSX will look more consistent with other systems that do not
 *    render text using sub-pixel anti-aliasing.
 */
html {
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [1] */
  background-color: #f9f9f9;
  color: #000;
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  /* [3] */
  -webkit-text-size-adjust: 100%;
  /* [4] */
  -ms-text-size-adjust: 100%;
  /* [4] */
  -moz-osx-font-smoothing: grayscale;
  /* [5] */
  -webkit-font-smoothing: antialiased;
  /* [5] */ }

/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
/**
 * Headings 1–6, with corresponding Greek-alphabet abstract classes for double-
 * stranded heading hierarchy: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 */
h1, .alpha {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.33333; }

h2, .beta {
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.6; }

h3, .gamma {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1; }

h4, .delta {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2; }

h5, .epsilon {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5; }

h6, .zeta {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429; }

/*------------------------------------*\
    #LISTS
\*------------------------------------*/
/**
 * Remove extra vertical spacing when nesting lists.
 */
li > ul, li > ol {
  margin-bottom: 0; }

/*------------------------------------*\
    #IMAGES
\*------------------------------------*/
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */ }

/**
 * 1. Google Maps breaks if `max-width: 100%` acts upon it; use their selector
 *    to remove the effects.
 * 2. If a `width` and/or `height` attribute have been explicitly defined, let’s
 *    not make the image fluid.
 */
.gm-style img, img[width], img[height] {
  /* [2] */
  max-width: none; }

/**
 * #OBJECTS
 */
/*
|--------------------------------------------------------------------------
| Wrapper
|--------------------------------------------------------------------------
| 
| 
| 
*/
.wrapper {
  max-width: 1100px;
  margin: 0 auto;
  padding-right: 12px;
  padding-left: 12px; }
  @media screen and (min-width: 720px) {
    .wrapper {
      padding-right: 24px;
      padding-left: 24px; } }

/*------------------------------------*\
    #BUTTONS
\*------------------------------------*/
/**
 * A simple button object.
 */
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 * 6. Fixes odd inner spacing in IE7.
 * 7. Subtract the border size from the padding value so that buttons do not
 *    grow larger as we add borders.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  border: none;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  overflow: visible;
  /* [6] */
  padding: 10px 22px;
  /* [7] */
  background-color: #f804ac;
  border: 2px solid #f804ac;
  border-radius: 3px; }
  .btn, .btn:hover, .btn:active, .btn:focus {
    text-decoration: none;
    /* [4] */
    color: #fff; }

/**
 * Fix a Firefox bug whereby `input type="submit"` gains 2px extra padding.
 */
.btn::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
     * Small buttons.
     */
.btn--small {
  padding: 4px 10px;
  /* [7] */ }

/**
     * Full-width buttons.
     */
.btn--full {
  width: 100%; }

/*------------------------------------*\
    #LAYOUT
\*------------------------------------*/
/**
 * The inuitcss layout system uses `box-sizing: border-box;` and
 * `display: inline-block;` to create an extremely powerful, flexible
 * alternative to the traditional grid system. Combine the layout items with
 * the widths found in `trumps.widths`.
 */
/**
 * Begin a layout group.
 */
.layout {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -24px; }

/**
     * 1. Cause columns to stack side-by-side.
     * 2. Space columns apart.
     * 3. Align columns to the tops of each other.
     * 4. Full-width unless told to behave otherwise.
     * 5. Required to combine fluid widths and fixed gutters.
     */
.layout__item {
  display: inline-block;
  /* [1] */
  padding-left: 24px;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */ }

/**
     * Layouts with large gutters.
     */
.layout--large {
  margin-left: -48px; }
  .layout--large > .layout__item {
    padding-left: 48px; }

/**
     * Align layout items to the vertical centers of each other.
     */
.layout--middle > .layout__item {
  vertical-align: middle; }

/**
     * Align layout items to the vertical bottoms of each other.
     */
.layout--bottom > .layout__item {
  vertical-align: bottom; }

/*------------------------------------*\
    #BOX
\*------------------------------------*/
/**
 * The box object simply boxes off content.
 */
/**
 * 1. So we can apply the `.box` class to naturally-inline elements.
 */
.box {
  display: block;
  /* [1] */
  padding: 24px; }
  .box > :last-child {
    margin-bottom: 0; }

/*------------------------------------*\
    #MEDIA
\*------------------------------------*/
/**
 * Place any image- and text-like content side-by-side, as per:
 * stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */
.media {
  display: block; }

.media__img {
  float: left;
  margin-right: 24px; }
  .media__img > img {
    display: block; }

.media__body {
  overflow: hidden;
  display: block; }
  .media__body, .media__body > :last-child {
    margin-bottom: 0; }

/*------------------------------------*\
    #FLAG
\*------------------------------------*/
/**
 * The flag object is a design pattern similar to the media object, however it
 * utilises `display: table[-cell];` to give us control over the vertical
 * alignments of the text and image. csswizardry.com/2013/05/the-flag-object
 */
/**
 * 1. Allows us to control vertical alignments
 * 2. Force the object to be the full width of its parent. Combined with [1],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.flag {
  display: table;
  /* [1] */
  width: 100%;
  /* [2] */ }

/**
     * Items within a flag object. There should only ever be one of each.
     *
     * 1. Default to aligning content to their middles.
     */
.flag__img, .flag__body {
  display: table-cell;
  vertical-align: middle;
  /* [1] */ }

/**
     * Flag images have a space between them and the body of the object.
     */
.flag__img {
  padding-right: 24px; }
  .flag__img > img {
    display: block;
    max-width: none; }

/**
     * The container for the main content of the flag object.
     *
     * 1. Forces the `.flag__body` to take up all remaining space.
     */
.flag__body {
  width: 100%;
  /* [1] */ }
  .flag__body, .flag__body > :last-child {
    margin-bottom: 0; }

/**
     * Reversed flag objects have their image-content to the right, and text-content
     * to the left.
     *
     * 1. Swap the rendered direction of the object…
     * 2. …and reset it.
     * 3. Reassign margins to the correct sides.
     */
.flag--rev {
  direction: rtl;
  /* [1] */ }
  .flag--rev > .flag__img, .flag--rev > .flag__body {
    direction: ltr;
    /* [2] */ }
  .flag--rev > .flag__img {
    padding-right: 0;
    /* [3] */
    padding-left: 24px;
    /* [3] */ }

/**
     * Responsive flag objects.
     *
     * There is a very pragmatic, simple implementation of a responsive flag
     * object, which simply places the text-content beneath the image-content.
     *
     * We use a `max-width` media query because:
     *
     * a) it is the least verbose method in terms of amount of code required.
     * b) the flag object’s default state is image-next-to-text, so its stacked
     *    state is the exception, rather than the rule.
     */
@media screen and (max-width: 479px) {
  .flag--responsive {
    /**
                 * Disable reversal of content because there is no concept of
                 * ‘reversed’ in a stacked layout.
                 */
    direction: ltr;
    /**
             * Rework the spacings on regular flag objects.
             */ }
    .flag--responsive, .flag--responsive > .flag__img, .flag--responsive > .flag__body {
      display: block; }
    .flag--responsive > .flag__img {
      padding-right: 0;
      padding-left: 0;
      margin-bottom: 24px; } }

/**
 * #TRUMPS
 */
/*------------------------------------*\
    #CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing
 * over and over in your markup.
 */
.box:after, .media:after, #nav ul:after {
  content: "";
  display: table;
  clear: both; }

/*------------------------------------*\
    #WIDTHS
\*------------------------------------*/
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes can take a fraction-like format (e.g. `.2/3`) or a spoken-
 * word format (e.g. `two-thirds`). Toggle formats by overriding the
 * `$inuit-use-fractions` variable defined below.
 */
/**
     * Whole.
     */
.one-whole {
  width: 100% !important; }

/**
     * Halves.
     */
.one-half, .two-quarters, .three-sixths, .four-eighths, .five-tenths, .six-twelfths {
  width: 50% !important; }

/**
     * Thirds.
     */
.one-third, .two-sixths, .three-ninths, .four-twelfths {
  width: 33.33333% !important; }

.two-thirds, .four-sixths, .six-ninths, .eight-twelfths {
  width: 66.66667% !important; }

/**
     * Quarters.
     */
.one-quarter, .two-eighths, .three-twelfths {
  width: 25% !important; }

.three-quarters, .six-eighths, .nine-twelfths {
  width: 75% !important; }

/**
     * Fifths.
     */
.one-fifth, .two-tenths {
  width: 20% !important; }

.two-fifths, .four-tenths {
  width: 40% !important; }

.three-fifths, .six-tenths {
  width: 60% !important; }

.four-fifths, .eight-tenths {
  width: 80% !important; }

/**
     * Sixths.
     */
.one-sixth, .two-twelfths {
  width: 16.66667% !important; }

.five-sixths, .ten-twelfths {
  width: 83.33333% !important; }

/**
     * Eighths.
     */
.one-eighth {
  width: 12.5% !important; }

.three-eighths {
  width: 37.5% !important; }

.five-eighths {
  width: 62.5% !important; }

.seven-eighths {
  width: 87.5% !important; }

/**
     * Ninths.
     */
.one-ninth {
  width: 11.11111% !important; }

.two-ninths {
  width: 22.22222% !important; }

.four-ninths {
  width: 44.44444% !important; }

.five-ninths {
  width: 55.55556% !important; }

.seven-ninths {
  width: 77.77778% !important; }

.eight-ninths {
  width: 88.88889% !important; }

/**
     * Tenths.
     */
.one-tenth {
  width: 10% !important; }

.three-tenths {
  width: 30% !important; }

.seven-tenths {
  width: 70% !important; }

.nine-tenths {
  width: 90% !important; }

/**
     * Twelfths.
     */
.one-twelfth {
  width: 8.33333% !important; }

.five-twelfths {
  width: 41.66667% !important; }

.seven-twelfths {
  width: 58.33333% !important; }

.eleven-twelfths {
  width: 91.66667% !important; }

/*------------------------------------*\
    #WIDTHS-RESPONSIVE
\*------------------------------------*/
/**
 * Some simple, crude, starting-point widths to use alongside the layout system.
 */
@media screen and (max-width: 719px) {
  .palm-one-whole {
    width: 100%; }
  .palm-one-half {
    width: 50%; }
  .palm-one-third {
    width: 33.33333%; }
  .palm-two-thirds {
    width: 66.66667%; }
  .palm-one-quarter {
    width: 25%; }
  .palm-three-quarters {
    width: 75%; }
  .palm-one-fifth {
    width: 20%; }
  .palm-two-fifths {
    width: 40%; }
  .palm-three-fifths {
    width: 60%; }
  .palm-four-fifths {
    width: 80%; }
  .palm-one-tenth {
    width: 10%; }
  .palm-three-tenths {
    width: 30%; }
  .palm-seven-tenths {
    width: 70%; }
  .palm-nine-tenths {
    width: 90%; } }

@media screen and (min-width: 720px) and (max-width: 1023px) {
  .lap-one-whole {
    width: 100%; }
  .lap-one-half {
    width: 50%; }
  .lap-one-third {
    width: 33.33333%; }
  .lap-two-thirds {
    width: 66.66667%; }
  .lap-one-quarter {
    width: 25%; }
  .lap-three-quarters {
    width: 75%; }
  .lap-one-fifth {
    width: 20%; }
  .lap-two-fifths {
    width: 40%; }
  .lap-three-fifths {
    width: 60%; }
  .lap-four-fifths {
    width: 80%; }
  .lap-one-tenth {
    width: 10%; }
  .lap-three-tenths {
    width: 30%; }
  .lap-seven-tenths {
    width: 70%; }
  .lap-nine-tenths {
    width: 90%; } }

@media screen and (min-width: 720px) {
  .lap-and-up-one-whole {
    width: 100%; }
  .lap-and-up-one-half {
    width: 50%; }
  .lap-and-up-one-third {
    width: 33.33333%; }
  .lap-and-up-two-thirds {
    width: 66.66667%; }
  .lap-and-up-one-quarter {
    width: 25%; }
  .lap-and-up-three-quarters {
    width: 75%; }
  .lap-and-up-one-fifth {
    width: 20%; }
  .lap-and-up-two-fifths {
    width: 40%; }
  .lap-and-up-three-fifths {
    width: 60%; }
  .lap-and-up-four-fifths {
    width: 80%; }
  .lap-and-up-one-tenth {
    width: 10%; }
  .lap-and-up-three-tenths {
    width: 30%; }
  .lap-and-up-seven-tenths {
    width: 70%; }
  .lap-and-up-nine-tenths {
    width: 90%; } }

@media screen and (max-width: 1023px) {
  .portable-one-whole {
    width: 100%; }
  .portable-one-half {
    width: 50%; }
  .portable-one-third {
    width: 33.33333%; }
  .portable-two-thirds {
    width: 66.66667%; }
  .portable-one-quarter {
    width: 25%; }
  .portable-three-quarters {
    width: 75%; }
  .portable-one-fifth {
    width: 20%; }
  .portable-two-fifths {
    width: 40%; }
  .portable-three-fifths {
    width: 60%; }
  .portable-four-fifths {
    width: 80%; }
  .portable-one-tenth {
    width: 10%; }
  .portable-three-tenths {
    width: 30%; }
  .portable-seven-tenths {
    width: 70%; }
  .portable-nine-tenths {
    width: 90%; } }

@media screen and (min-width: 1024px) {
  .desk-one-whole {
    width: 100%; }
  .desk-one-half {
    width: 50%; }
  .desk-one-third {
    width: 33.33333%; }
  .desk-two-thirds {
    width: 66.66667%; }
  .desk-one-quarter {
    width: 25%; }
  .desk-three-quarters {
    width: 75%; }
  .desk-one-fifth {
    width: 20%; }
  .desk-two-fifths {
    width: 40%; }
  .desk-three-fifths {
    width: 60%; }
  .desk-four-fifths {
    width: 80%; }
  .desk-one-tenth {
    width: 10%; }
  .desk-three-tenths {
    width: 30%; }
  .desk-seven-tenths {
    width: 70%; }
  .desk-nine-tenths {
    width: 90%; }
  .desk-push-one-tenth {
    position: relative;
    left: 10%; } }

/**
* #Component
*/
label {
  display: block; }

input, select, textarea {
  border: 1px solid #ddd;
  min-height: 37px;
  padding: 5px;
  width: 100%;
  -webkit-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box; }

@media screen and (max-width: 719px) {
  input, select, textarea {
    width: 90%; } }

@media screen and (min-width: 720px) and (max-width: 1023px) {
  input, select {
    width: 300px; } }

input:focus, select:focus, textarea:focus, button:focus, [contenteditable="true"]:focus {
  outline: none;
  outline: thin dotted \9; }

textarea {
  height: auto; }

input[type="checkbox"], input[type="file"], input[type="image"], input[type="radio"] {
  background: auto !important;
  border: auto !important;
  height: auto !important;
  width: auto !important; }
input[disabled] {
  cursor: not-allowed;
  background-color: #f6f6f6; }

@media screen and (min-width: 720px) and (max-width: 1023px) {
  input[type="submit"] {
    width: auto; }
  textarea {
    width: 400px; } }

select[disabled], textarea[disabled] {
  background-color: #f6f6f6; }

fieldset {
  border: 1px solid #ededed;
  padding: 10px 25px; }
  fieldset legend {
    font-weight: bold;
    font-size: 13px;
    font-size: 0.8125rem;
    line-height: 1.84615;
    padding: 0 10px; }

input.required:required:valid, textarea.required:required:valid {
  border-color: #2ecc71; }

input.required:focus:invalid, textarea.required:focus:invalid {
  border-color: #e74c3c; }

.form-item {
  display: block;
  padding: 14px 0; }

.has-error .help-block, .has-error .control-label, .has-error .radio, .has-error .checkbox, .has-error .radio-inline, .has-error .checkbox-inline, .has-error .label-danger, .has-error label {
  color: #a94442; }
.has-error input, .has-error textarea {
  border-color: #a94442;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); }
  .has-error input:focus, .has-error textarea:focus {
    border-color: #843534;
    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483;
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483; }
.has-error .label-danger {
  font-size: 11px; }
.has-error .form-control {
  border-color: #a94442;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); }
  .has-error .form-control:focus {
    border-color: #843534;
    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483;
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483; }
.has-error .input-group-addon {
  color: #a94442;
  border-color: #a94442;
  background-color: #a94442; }
.has-error .form-control-feedback {
  color: #a94442; }

form.border-radius input, form.border-radius select, form.border-radius textarea, form.border-radius fieldset {
  border-radius: 3px; }

.form-inline label {
  width: auto; }

@media screen and (min-width: 720px) and (max-width: 1023px) {
  .form-inline label {
    display: inline-block;
    width: 100px; }
  .form-inline textarea {
    width: auto; } }

::-webkit-input-placeholder {
  color: #ccc; }

:-ms-input-placeholder {
  color: #ccc; }

::-moz-placeholder {
  color: #ccc; }

:-moz-placeholder {
  color: #ccc; }

@-webkit-keyframes progress-bar-stripes {
  from {
    background-position: 40px 0; }

  to {
    background-position: 0 0; } }

@keyframes progress-bar-stripes {
  from {
    background-position: 40px 0; }

  to {
    background-position: 0 0; } }

.progress {
  overflow: hidden;
  height: 18px;
  margin-bottom: 18px;
  background-color: #f5f5f5;
  border-radius: 3px;
  -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
          box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1); }

.progress-bar {
  float: left;
  width: 0%;
  height: 100%;
  font-size: 13px;
  line-height: 18px;
  color: #fff;
  text-align: center;
  background-color: #f43059;
  -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);
          box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);
  -webkit-transition: width 0.6s ease;
          transition: width 0.6s ease; }

.progress.active .progress-bar, .progress-bar.active {
  -webkit-animation: progress-bar-stripes 2s linear infinite;
          animation: progress-bar-stripes 2s linear infinite; }

.progress-bar[aria-valuenow="1"], .progress-bar[aria-valuenow="2"] {
  min-width: 30px; }
.progress-bar[aria-valuenow="0"] {
  color: #ccc;
  min-width: 30px;
  background-color: transparent;
  background-image: none;
  -webkit-box-shadow: none;
          box-shadow: none; }

.progress-bar-success {
  background-color: #428bca; }

#outer-wrap {
  position: relative;
  overflow: hidden;
  width: 100%;
  min-height: 100%; }

#inner-wrap {
  position: relative;
  width: 100%;
  min-height: 600px;
  height: 100%; }

.block {
  position: relative;
  margin: 0 auto;
  padding: 24px 20px;
  max-width: 960px; }

.close-btn {
  display: block;
  width: 42px;
  height: 36px;
  padding: 0;
  border: 0;
  outline: none;
  background: #efefef url("../images/close-btn-dark.svg") left center no-repeat;
  background-size: 30px 30px;
  overflow: hidden;
  white-space: nowrap;
  text-indent: 100%;
  opacity: 1;
  zoom: 1;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }
  .no-svg .close-btn {
    background-image: url("../images/close-btn.png"); }
  .close-btn:focus, .close-btn:hover {
    opacity: 1;
    zoom: 1; }

.nav-btn {
  display: block;
  width: 42px;
  height: 36px;
  padding: 0;
  border: 0;
  outline: none;
  background: white url("../images/nav-icon-dark.svg") left center no-repeat;
  background-size: 30px 24px;
  overflow: hidden;
  white-space: nowrap;
  text-indent: 100%;
  opacity: 0.7;
  zoom: 1;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }
  .no-svg .nav-btn {
    background-image: url("../images/nav-icon.png"); }
  .nav-btn:hover, .nav-btn:focus {
    opacity: 1;
    zoom: 1; }

.svg-btn-close {
  fill: #f43059; }

#nav {
  z-index: 200;
  position: relative;
  overflow: hidden;
  width: 100%;
  color: #000;
  background: white; }
  #nav .close-btn {
    display: none; }
  #nav .block-title {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px; }
  #nav .block {
    z-index: 2;
    position: relative;
    padding: 12px 20px; }
  #nav ul {
    display: block; }
  #nav li {
    display: block; }
    #nav li a {
      display: block;
      color: #000;
      font-size: 16px;
      font-size: 1rem;
      line-height: 1.5;
      font-weight: bold;
      outline: none; }
      #nav li a:focus, #nav li a:hover {
        color: #f43059;
        background: rgba(255, 255, 255, 0.1); }
    #nav li.is-active a {
      color: #f43059; }

#top {
  z-index: 100;
  position: relative;
  color: #000;
  background: white; }
  #top .block-title {
    margin: 0;
    font-size: 30px;
    line-height: 36px;
    text-align: center;
    white-space: nowrap; }
  #top .nav-btn {
    position: absolute;
    top: 24px;
    left: 30px; }

@media screen and (max-width: 719px) {
  #nav {
    position: absolute;
    top: 0;
    padding-top: 84px; }
    #nav:not(:target) {
      z-index: 1;
      height: 0; }
    #nav:target .close-btn {
      display: block; }
    #nav .close-btn {
      position: absolute;
      top: -60px;
      left: 30px; }
    #nav .block {
      position: relative;
      padding: 0; }
    #nav ul {
      margin-left: 0; }
    #nav li {
      position: relative;
      border-top: 1px solid rgba(50, 50, 50, 0.1); }
      #nav li:last-child {
        border-bottom: 1px solid rgba(50, 50, 50, 0.1); }
      #nav li.is-active:after {
        z-index: 50;
        display: block;
        content: "";
        position: absolute;
        top: 50%;
        right: -0.5px;
        margin-top: -10px;
        border-top: 10px transparent solid;
        border-bottom: 10px transparent solid;
        border-right: 10px #fff solid; }
      #nav li a {
        padding: 12px 30px; }
  .js-ready #nav {
    height: 100%;
    width: 70%;
    background: #efefef;
    -webkit-box-shadow: inset -24px 0 24px -12px rgba(0, 0, 0, 0.25);
            box-shadow: inset -24px 0 24px -12px rgba(0, 0, 0, 0.25); }
    .js-ready #nav .block {
      background: transparent; }
    .js-ready #nav .close-btn {
      display: block;
      opacity: 0.7;
      zoom: 1; }
      .js-ready #nav .close-btn:focus, .js-ready #nav .close-btn:hover {
        opacity: 1;
        zoom: 1; }
  .js-ready #nav {
    left: -70%; }
  .js-ready #inner-wrap {
    left: 0; }
  .js-nav #inner-wrap {
    left: 70%; }
  .csstransforms3d.csstransitions.js-ready #nav {
    left: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0);
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden; }
  .csstransforms3d.csstransitions.js-ready #inner-wrap {
    left: 0 !important;
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
    -webkit-transition: -webkit-transform 500ms ease;
            transition: transform 500ms ease;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden; }
  .csstransforms3d.csstransitions.js-nav #inner-wrap {
    -webkit-transform: translate3d(70%, 0, 0) scale3d(1, 1, 1);
            transform: translate3d(70%, 0, 0) scale3d(1, 1, 1); }
  .csstransforms3d.csstransitions.js-ready #nav .block {
    opacity: 0.7;
    zoom: 1;
    -webkit-transition: opacity 300ms 100ms ease, -webkit-transform 500ms ease;
            transition: opacity 300ms 100ms ease, transform 500ms ease;
    -webkit-transform: translate3d(70%, 0, 0) scale3d(0.9, 0.9, 0.9);
            transform: translate3d(70%, 0, 0) scale3d(0.9, 0.9, 0.9);
    -webkit-transform-origin: 50% 0%;
        -ms-transform-origin: 50% 0%;
            transform-origin: 50% 0%; }
  .csstransforms3d.csstransitions.js-nav #nav .block {
    opacity: 1;
    zoom: 1;
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); } }

@media screen and (min-width: 720px) {
  #top .nav-btn {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px; }
  #nav .close-btn {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px; }
  #nav .block-title {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px; }
  #nav ul {
    text-align: center;
    white-space: nowrap; }
  #nav li {
    display: inline-block;
    border-right: 1px solid rgba(255, 255, 255, 0.1); }
    #nav li:last-child {
      border-right: none; }
    #nav li a {
      padding: 6px 12px; } }

.svg-close-path {
  fill: #f43059; }

.svg-close-line {
  stroke: #f43059; }

.svg-nav-circle {
  fill: #f43059; }

.svg-nav-rect {
  fill: #f43059; }

html, body {
  height: 100%; }

body {
  font-family: 'Noto Sans', sans-serif; }

/* ---------------- list dl ---------------- */
dl.table-display {
  width: 80%;
  margin: 1em 0;
  padding: 0;
  border-bottom: 1px solid #aaa; }
  dl.table-display dt {
    display: inline-block;
    width: 30%;
    margin: 0;
    padding: 12px;
    border-top: 1px solid #aaa;
    font-weight: bold; }
  dl.table-display dd {
    display: inline-block;
    width: 70%;
    margin: 0;
    padding: 12px;
    border-top: 1px solid #aaa; }

/* ---------------- fileupload ---------------- */
#error-upload {
  color: red; }

.fileinput-button {
  position: relative;
  overflow: hidden;
  display: block; }

.fileinput-button input {
  position: absolute;
  top: 0;
  right: 0;
  margin: 0;
  opacity: 0;
  -ms-filter: 'alpha(opacity=0)';
  font-size: 200px;
  direction: ltr;
  cursor: pointer; }

/* Fixes for IE < 8 */
@media screen\9 {
  .fileinput-button input {
    filter: alpha(opacity=0);
    font-size: 100%;
    height: 100%; } }

/* ---------------- show-password checkbox ---------------- */
form span label.show-password {
  margin: 8px 0 0 1px; }

form span label.show-password input {
  cursor: default;
  position: relative;
  top: -1px; }

form span label.show-password span {
  white-space: nowrap;
  font-size: 0.95em;
  margin: 0 0 0 8px;
  padding: 0 15px 0 0; }
